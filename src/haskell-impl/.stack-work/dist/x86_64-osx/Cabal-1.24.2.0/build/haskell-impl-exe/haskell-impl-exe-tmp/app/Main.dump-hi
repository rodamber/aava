
==================== FINAL INTERFACE ====================
2017-04-29 00:44:43.934656 UTC

interface main@main:Main 8002
  interface hash: a918d69d067accb0ae91259ab83d604a
  ABI hash: 48f1a9c533f919dcbdbd1dae4cff7720
  export-list hash: b17c9d768b886e7261b049f2ece3e760
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 071e247de501cd5d7792a3c3e8673753
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.search
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      haskell-impl-0.1.0.0@haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V
                      integer-gmp-1.0.0.1
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  haskell-impl-0.1.0.0@haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V:C 9f377b29a39da4b9d45ed9fe67808717
import  -/  haskell-impl-0.1.0.0@haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V:Haskell 1524ee474b6d3db3039ced034a063ad1
import  -/  haskell-impl-0.1.0.0@haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V:Lib bffb5ecf14660363d3f67ff38b8a37b6
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
8e61d7012f0050058a47efc89f9723dc
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f46dd2fd2e8bce39a9bf68face1886ef
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Unfolding: (Main.main3 Main.main2) -}
bda3199b66dd5955ae5167e66f207372
  main2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
5c00424c205a02776cc034d051f80269
  main3 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
b45618d35e5d822c7158c01e061efaa3
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
529c0759ca4d3d425a2bc202921abf37
  search :: [Lib.Search] -> Lib.Txt -> Lib.Pat -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.search1
                  `cast`
                (<[Lib.Search]>_R
                 ->_R <Lib.Txt>_R
                 ->_R <Lib.Pat>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c92e050413c57d83f18c9f4e8b985502
  search1 ::
    [Lib.Search]
    -> Lib.Txt
    -> Lib.Pat
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,U>,
     Unfolding: (\ (ss :: [Lib.Search])
                   (txt :: Lib.Txt)
                   (pat :: Lib.Pat)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.showList__
                      @ Lib.Output
                      Lib.$fShowOutput1
                      (GHC.Base.map
                         @ (Lib.Txt -> Lib.Pat -> Lib.Output)
                         @ Lib.Output
                         (\ (s :: Lib.Txt -> Lib.Pat -> Lib.Output) -> s txt pat)
                         ss)
                      (GHC.Types.[] @ GHC.Types.Char))
                   GHC.Types.True
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

