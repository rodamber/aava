
==================== FINAL INTERFACE ====================
2017-04-29 00:37:45.65388 UTC

interface haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V:Haskell 8002
  interface hash: 77259d539fa52f1f59c1b98c8c684e3d
  ABI hash: 1524ee474b6d3db3039ced034a063ad1
  export-list hash: 0f1f00e8ccb49d3d515cd8875f0e2de6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e4ab4114981d8f7985c8fb1c27c84e38
  sig of: Nothing
  used TH splices: False
  where
exports:
  Haskell.indexedTails
  Haskell.matchIndex
  Haskell.naive
module dependencies: C Lib
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Lib bffb5ecf14660363d3f67ff38b8a37b6
  exports: 72fbd3f4d84d87079f8f4101b4d5d373
  Output 2865c01997e09e0f1cddde9354e28811
  Output 7dacc536cc85edb4dc21ec4c2d409c2d
  Pat 1dfa11f06ec168ac51b4531045ce4311
  Txt 273659930785860e98571c2788ce7757
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 02cbbc20bdd508fabc38de38896bbae0
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal a2f6f66c5bb1247458d9fa25257ab188
0e38fe9e0199f80d2c80a6695a990df7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Haskell.$trModule2
                   Haskell.$trModule1) -}
6ee3ec5e4bf11a176beabb17bffb256b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Haskell"#) -}
7a738c791277928762292c6ae6cbfba7
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "haskell-impl-0.1.0.0-5QZQUPOQJel4VPmddVin6V"#) -}
6353a61568dc8c6920cf8d2dee230c8c
  $wmatchIndex ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (GHC.Types.Int, Data.Text.Internal.Text)
    -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 4, Strictness: <L,U><L,U><S,U><L,1*U(U,1*U(U,U,U))>,
     Inline: [0] -}
774b86cab7782d9a4dee94bfe5916e5a
  indexedTails ::
    Data.Text.Internal.Text
    -> [(GHC.Types.Int, Data.Text.Internal.Text)]
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x :: Data.Text.Internal.Text) ->
                 case GHC.List.zip
                        @ GHC.Types.Int
                        @ Data.Text.Internal.Text
                        Haskell.indexedTails1
                        (case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                         case Data.Text.$wtails ww1 ww2 ww3 of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ Data.Text.Internal.Text ww5 ww6 } }) of wild {
                   [] -> GHC.List.init2 @ (GHC.Types.Int, Data.Text.Internal.Text)
                   : x1 xs
                   -> GHC.List.init1
                        @ (GHC.Types.Int, Data.Text.Internal.Text)
                        x1
                        xs }) -}
cb9def7aa3e0daff7d170bbf1dfc5c85
  indexedTails1 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
ede3bdb66505c5f37fd4251003e846a0
  matchIndex ::
    Data.Text.Internal.Text
    -> (GHC.Types.Int, Data.Text.Internal.Text)
    -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 2, Strictness: <S(LLS),1*U(U,U,U)><L,1*U(U,1*U(U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Text.Internal.Text)
                   (w1 :: (GHC.Types.Int, Data.Text.Internal.Text)) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Haskell.$wmatchIndex ww1 ww2 ww3 w1 }) -}
cc491e19bde07090135daab1c85cd530
  naive :: Lib.Txt -> Lib.Pat -> Lib.Output
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><L,U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (txt :: Lib.Txt) (pat :: Lib.Pat) ->
                 Lib.Output
                   (GHC.Base.build
                      @ GHC.Types.Int
                      (\ @ b1
                         (c :: GHC.Types.Int -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ (GHC.Types.Int, Data.Text.Internal.Text)
                         @ b1
                         (Data.Maybe.mapMaybeFB
                            @ GHC.Types.Int
                            @ b1
                            @ (GHC.Types.Int, Data.Text.Internal.Text)
                            c
                            (Haskell.matchIndex pat))
                         n
                         (Haskell.indexedTails txt)))
                   Haskell.naive1) -}
1c415a72b6b490064d337647c124f549
  naive1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

